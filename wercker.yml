box: ami-7f97d816
box-type: ami
build:
    steps:
        - script:
            name: Go workspace
            code: |
                sudo apt-get update -y -qq
                sudo apt-get install git -y -qq

                wget https://go.googlecode.com/files/go1.1.linux-amd64.tar.gz
                sudo tar -C /usr/local -xzf go1.1.linux-amd64.tar.gz
                export PATH="$PATH:/usr/local/go/bin"
                export PATH="$PATH:$GOPATH/bin"

                export GOPATH="$HOME/go"
                mkdir -p "$GOPATH/{src,bin,pkg}"
                mkdir -p "$GOPATH/src/github.com/pjvds/docker-to-digital-ocean-example"
                rsync -avz "$WERCKER_SOURCE_DIR/" "$GOPATH/src/github.com/pjvds/docker-to-digital-ocean-example"
                export WERCKER_SOURCE_DIR="$GOPATH/src/github.com/pjvds/docker-to-digital-ocean-example"
        - script:
            name: Go environment
            code: go env
        - script:
            name: Go get
            code: go get
        - script:
            name: Go build
            code: go build -o main
        - script:
            name: Build container
            code: sudo docker build -t="pjvds/counter" .
        - script:
            name: Export container
            code: |
                CID=$(sudo docker run -d -entrypoint="/bin/sh" pjvds/counter /bin/echo hello world)
                sudo docker export $CID > $WERCKER_OUTPUT_DIR/counter.tar
deploy:
    steps:
        - wercker/add-ssh-key:
            keyname: REMOTE_HOST_KEY
        - script:
            name: Setup environment
            code: |
                export REMOTE_HOST="162.243.131.112"
                export REPOSITORY_NAME="pjvds/counter"
        - add-to-known_hosts:
            hostname: $REMOTE_HOST
        - script:
            name: Copy container
            code: |
                scp counter.tar root@$REMOTE_HOST:/tmp/counter.tar
                CID=$(ssh root@$REMOTE_HOST "cat /tmp/counter.tar | docker import - $REPOSITORY_NAME")
                echo "Imported container with id $CID to repository $REPOSITORY_NAME"

                ssh root@$REMOTE_HOST "docker ps | tail -n +2 | awk '{print $1}' | xargs -r docker stop"
                ssh root@$REMOTE_HOST "docker ps -a | tail -n +2 | awk '{print $1}' | xargs -r docker rm"
                ssh root@$REMOTE_HOST "docker run -p=80:80 pjvds/counter /var/www/main --host=0.0.0.0 --port=80"
